# 🐳 FoodBuddy Docker Compose - 운영 환경
# 백엔드(Spring Boot) + 프론트엔드(Next.js) + MySQL

version: "3.8"

services:
  # 🗄️ MySQL 데이터베이스
  mysql:
    image: mysql:8.0
    container_name: foodbuddy-mysql
    restart: unless-stopped
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD:-foodbuddy_root_password}
      - MYSQL_DATABASE=${MYSQL_DATABASE:-foodbuddy_db}
      - MYSQL_USER=${MYSQL_USER:-foodbuddy_user}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD:-foodbuddy_password}
      - TZ=Asia/Seoul
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/init:/docker-entrypoint-initdb.d:ro
    command: >
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_unicode_ci
      --default-time-zone='+09:00'
      --max_connections=200
      --innodb_buffer_pool_size=256M
    healthcheck:
      test:
        [
          "CMD",
          "mysqladmin",
          "ping",
          "-h",
          "localhost",
          "-u",
          "root",
          "-p${MYSQL_ROOT_PASSWORD:-foodbuddy_root_password}",
        ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    networks:
      - foodbuddy-network

  # 🏗️ 백엔드 API 서버 (Spring Boot)
  backend:
    image: ${ECR_REGISTRY}/${PROJECT_NAME}-backend:${IMAGE_TAG:-latest}
    container_name: foodbuddy-backend
    restart: unless-stopped
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      # 🌍 Spring 환경 설정
      - SPRING_PROFILES_ACTIVE=${NODE_ENV:-production}
      - SERVER_PORT=8080

      # 🗄️ 데이터베이스 연결 설정
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/${MYSQL_DATABASE:-foodbuddy_db}?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Seoul&characterEncoding=UTF-8
      - SPRING_DATASOURCE_USERNAME=${MYSQL_USER:-foodbuddy_user}
      - SPRING_DATASOURCE_PASSWORD=${MYSQL_PASSWORD:-foodbuddy_password}
      - SPRING_DATASOURCE_DRIVER_CLASS_NAME=com.mysql.cj.jdbc.Driver

      # 🔧 JPA/Hibernate 설정
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_JPA_SHOW_SQL=false
      - SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT=org.hibernate.dialect.MySQL8Dialect
      - SPRING_JPA_PROPERTIES_HIBERNATE_FORMAT_SQL=true

      # 🔐 JWT 설정
      - JWT_SECRET=${JWT_SECRET:-foodbuddy-super-secret-jwt-key-2024}
      - JWT_EXPIRATION=${JWT_EXPIRATION:-86400000}

      # 📊 로깅 설정
      - LOGGING_LEVEL_COM_VIBE_YORIVIEW=INFO
      - LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY=WARN

      # ⚡ 성능 최적화
      - SPRING_JPA_PROPERTIES_HIBERNATE_JDBC_BATCH_SIZE=20
      - SPRING_JPA_PROPERTIES_HIBERNATE_ORDER_INSERTS=true
      - SPRING_JPA_PROPERTIES_HIBERNATE_ORDER_UPDATES=true

      # 🌏 타임존 설정
      - TZ=Asia/Seoul
    ports:
      - "8080:8080"
    volumes:
      - backend_logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    networks:
      - foodbuddy-network

  # 🎨 프론트엔드 웹 애플리케이션 (Next.js)
  frontend:
    image: ${ECR_REGISTRY}/${PROJECT_NAME}-frontend:${IMAGE_TAG:-latest}
    container_name: foodbuddy-frontend
    restart: unless-stopped
    depends_on:
      backend:
        condition: service_healthy
    environment:
      # 🌍 Next.js 환경 설정
      - NODE_ENV=${NODE_ENV:-production}
      - PORT=3000
      - HOSTNAME=0.0.0.0

      # 🔗 API 연결 설정
      - NEXT_PUBLIC_API_URL=${BACKEND_URL:-http://localhost:8080}
      - NEXT_PUBLIC_FRONTEND_URL=${FRONTEND_URL:-http://localhost:3000}

      # 🚀 Next.js 최적화 설정
      - NEXT_TELEMETRY_DISABLED=1

      # 🌏 타임존 설정
      - TZ=Asia/Seoul
    ports:
      - "3000:3000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    networks:
      - foodbuddy-network

  # 📊 Nginx 리버스 프록시 (선택사항)
  nginx:
    image: nginx:alpine
    container_name: foodbuddy-nginx
    restart: unless-stopped
    depends_on:
      - frontend
      - backend
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--quiet",
          "--tries=1",
          "--spider",
          "http://localhost/health",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - foodbuddy-network

# 📦 볼륨 설정
volumes:
  mysql_data:
    driver: local
    name: foodbuddy_mysql_data
  backend_logs:
    driver: local
    name: foodbuddy_backend_logs
  nginx_logs:
    driver: local
    name: foodbuddy_nginx_logs

# 🌐 네트워크 설정
networks:
  foodbuddy-network:
    driver: bridge
    name: foodbuddy_network
