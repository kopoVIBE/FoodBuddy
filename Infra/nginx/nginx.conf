# 🌍 FoodBuddy Nginx 설정 파일
# 리버스 프록시, 로드 밸런싱, SSL 터미네이션

# 📊 메인 설정
user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

# 이벤트 처리 설정
events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    # 🎯 기본 설정
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # 📊 로그 형식
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';
    
    access_log /var/log/nginx/access.log main;
    
    # ⚡ 성능 최적화
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 100;
    
    # 📦 압축 설정
    gzip on;
    gzip_vary on;
    gzip_min_length 1000;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # 🔒 보안 헤더
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Referrer-Policy "strict-origin-when-cross-origin";
    
    # 📁 파일 업로드 제한
    client_max_body_size 10M;
    client_body_buffer_size 128k;
    
    # ⏱️ 타임아웃 설정
    proxy_connect_timeout 60s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;
    proxy_buffer_size 4k;
    proxy_buffers 4 32k;
    proxy_busy_buffers_size 64k;
    
    # 🎯 업스트림 서버 정의
    upstream foodbuddy_backend {
        server backend:8080 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }
    
    upstream foodbuddy_frontend {
        server frontend:3000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }
    
    # 🌍 HTTP 서버 (HTTPS로 리다이렉트)
    server {
        listen 80;
        server_name _;
        
        # Let's Encrypt ACME Challenge
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }
        
        # 🔒 HTTPS로 리다이렉트
        location / {
            return 301 https://$host$request_uri;
        }
    }
    
    # 🔒 HTTPS 서버
    server {
        listen 443 ssl http2;
        server_name _;
        
        # 🔐 SSL 인증서 설정
        ssl_certificate /etc/nginx/ssl/cert.pem;
        ssl_certificate_key /etc/nginx/ssl/key.pem;
        
        # SSL 보안 설정
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        
        # 🔒 보안 헤더 (HTTPS용)
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        
        # 🏥 헬스체크 엔드포인트
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # 🚀 API 요청 (백엔드로 프록시)
        location /api/ {
            proxy_pass http://foodbuddy_backend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            
            # 🔄 연결 재사용
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            
            # ⏱️ 타임아웃 설정
            proxy_connect_timeout 30s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # 📊 에러 처리
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
            proxy_next_upstream_tries 3;
            proxy_next_upstream_timeout 30s;
        }
        
        # 🎨 정적 파일 (이미지, CSS, JS)
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            proxy_pass http://foodbuddy_frontend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # 📦 캐시 설정
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary Accept-Encoding;
        }
        
        # 🎨 프론트엔드 요청 (Next.js로 프록시)
        location / {
            proxy_pass http://foodbuddy_frontend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            
            # 🔄 연결 재사용
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            
            # ⏱️ 타임아웃 설정
            proxy_connect_timeout 30s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # 📊 에러 처리
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
            proxy_next_upstream_tries 3;
            proxy_next_upstream_timeout 30s;
            
            # 🚫 캐시 비활성화 (동적 콘텐츠)
            proxy_cache_bypass $http_upgrade;
            proxy_no_cache $http_upgrade;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            add_header Expires "0";
        }
        
        # 🚫 보안: 숨겨진 파일 접근 차단
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        # 🚫 보안: 민감한 파일 접근 차단
        location ~* \.(env|log|bak|backup|old|tmp)$ {
            deny all;
            access_log off;
            log_not_found off;
        }
    }
    
    # 📊 모니터링용 서버 (내부 네트워크만)
    server {
        listen 8080;
        server_name localhost;
        
        location /nginx_status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            allow 10.0.0.0/8;
            allow 172.16.0.0/12;
            allow 192.168.0.0/16;
            deny all;
        }
    }
} 